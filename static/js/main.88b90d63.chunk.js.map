{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","selectGood","good","setState","removeGood","selectedGoods","index","indexOf","splice","clearGoods","getText","length","arr","join","partWithoutLast","slice","getKey","str","key","i","charCodeAt","toString","this","className","type","onClick","map","classNames","selected","includes","buttonRemove","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,CAAC,QAFnB,EAKEC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,aAAa,GAAD,mBAAMD,EAAMC,cAAZ,CAA0BE,SAP5C,EAWEE,WAAa,SAACF,GACZ,EAAKC,UAAS,SAACJ,GACb,IAAMM,EAAgBN,EAAMC,aACtBM,EAAQD,EAAcE,QAAQL,GAIpC,OAFAG,EAAcG,OAAOF,EAAO,GAErB,CAAEN,aAAcK,OAlB7B,EAsBEI,WAAa,WACX,EAAKN,SAAS,CAAEH,aAAc,MAvBlC,EA0BEU,QAAU,SAACC,EAAgBC,GACzB,GAAe,IAAXD,EACF,MAAM,mBAAN,OAA0BC,EAAI,GAA9B,gBAGF,GAAe,IAAXD,EACF,MAAM,mBAAN,OAA0BC,EAAIC,KAAK,SAAnC,iBAGF,GAAIF,EAAS,EAAG,CACd,IAAMG,EAAkBF,EAAIG,MAAM,EAAGH,EAAID,OAAS,GAElD,MAAM,mBAAN,OAA0BG,EAAgBD,KAAK,MAA/C,gBAA4DD,EAAIA,EAAID,OAAS,GAA7E,iBAGF,MAAO,oCAzCX,EA4CEK,OAAS,SAACC,GAGR,IAFA,IAAIC,EAAM,EAEDC,EAAI,EAAGA,EAAIF,EAAIN,OAAQQ,GAAK,EACnCD,GAAOD,EAAIG,WAAWD,GAGxB,OAAOD,EAAIG,YAnDf,4CAsDE,WAAU,IAAD,OACCrB,EAAiBsB,KAAKvB,MAAtBC,aAER,OACE,sBAAKuB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SACGD,KAAKZ,QAAQV,EAAaW,OAAQX,KAEpCA,GACC,wBACEwB,KAAK,SACLC,QAAS,kBAAM,EAAKhB,cACpBc,UAAU,gBAHZ,mBASF,oBAAIA,UAAU,YAAd,SACG1B,EAAgB6B,KAAI,SAACxB,GACpB,IAAMgB,EAAM,EAAKF,OAAOd,GAExB,OACE,qBACEqB,UAAWI,IAAW,YAAa,CACjCC,SAAU5B,EAAa6B,SAAS3B,KAFpC,UAME,+BAAOA,IACP,wBACEqB,UAAWI,IAAW,cAAe,CACnCG,aAAc9B,EAAa6B,SAAS3B,KAEtCsB,KAAK,SACLC,QAAS,WACP,OAAIzB,EAAa6B,SAAS3B,GACjB,EAAKE,WAAWF,GAGlB,EAAKD,WAAWC,IAV3B,SAaGF,EAAa6B,SAAS3B,GAAQ,SAAW,aAhBvCgB,eAjFrB,GAAyBa,IAAMC,WCpB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.88b90d63.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[];\n};\n\ntype Props = {};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  selectGood = (good: string) => {\n    this.setState((state) => ({\n      selectedGood: [...state.selectedGood, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState((state) => {\n      const selectedGoods = state.selectedGood;\n      const index = selectedGoods.indexOf(good);\n\n      selectedGoods.splice(index, 1);\n\n      return { selectedGood: selectedGoods };\n    });\n  };\n\n  clearGoods = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  getText = (length: number, arr: string[]) => {\n    if (length === 1) {\n      return `Selected goods: ${arr[0]} is selected`;\n    }\n\n    if (length === 2) {\n      return `Selected goods: ${arr.join(' and ')} are selected`;\n    }\n\n    if (length > 2) {\n      const partWithoutLast = arr.slice(0, arr.length - 1);\n\n      return `Selected goods: ${partWithoutLast.join(', ')} and ${arr[arr.length - 1]} are selected`;\n    }\n\n    return 'Selected good: No goods selected';\n  };\n\n  getKey = (str: string) => {\n    let key = 0;\n\n    for (let i = 0; i < str.length; i += 1) {\n      key += str.charCodeAt(i);\n    }\n\n    return key.toString();\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {this.getText(selectedGood.length, selectedGood)}\n        </h1>\n        {selectedGood && (\n          <button\n            type=\"button\"\n            onClick={() => this.clearGoods()}\n            className=\"Clear__button\"\n          >\n            Clear\n          </button>\n        )}\n\n        <ul className=\"App__list\">\n          {goodsFromServer.map((good) => {\n            const key = this.getKey(good);\n\n            return (\n              <li\n                className={classNames('App__link', {\n                  selected: selectedGood.includes(good),\n                })}\n                key={key}\n              >\n                <span>{good}</span>\n                <button\n                  className={classNames('App__button', {\n                    buttonRemove: selectedGood.includes(good),\n                  })}\n                  type=\"button\"\n                  onClick={() => {\n                    if (selectedGood.includes(good)) {\n                      return this.removeGood(good);\n                    }\n\n                    return this.selectGood(good);\n                  }}\n                >\n                  {selectedGood.includes(good) ? 'Remove' : 'Select'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}